sources:
  - name: attica
    subdir: 'ports'
    git: 'https://github.com/KDE/attica.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: breeze-icons
    subdir: 'ports'
    git: 'https://github.com/KDE/breeze-icons.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: extra-cmake-modules
    subdir: 'ports'
    git: 'https://github.com/KDE/extra-cmake-modules.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: karchive
    subdir: 'ports'
    git: 'https://github.com/KDE/karchive.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kauth
    subdir: 'ports'
    git: 'https://github.com/KDE/kauth.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kbookmarks
    subdir: 'ports'
    git: 'https://github.com/KDE/kbookmarks.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kcodecs
    subdir: 'ports'
    git: 'https://github.com/KDE/kcodecs.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kcolorscheme
    subdir: 'ports'
    git: 'https://github.com/KDE/kcolorscheme.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kcompletion
    subdir: 'ports'
    git: 'https://github.com/KDE/kcompletion.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kconfig
    subdir: 'ports'
    git: 'https://github.com/KDE/kconfig.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kconfigwidgets
    subdir: 'ports'
    git: 'https://github.com/KDE/kconfigwidgets.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kcoreaddons
    subdir: 'ports'
    git: 'https://github.com/KDE/kcoreaddons.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kcrash
    subdir: 'ports'
    git: 'https://github.com/KDE/kcrash.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kdbusaddons
    subdir: 'ports'
    git: 'https://github.com/KDE/kdbusaddons.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kded
    subdir: 'ports'
    git: 'https://github.com/KDE/kded.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kglobalaccel
    subdir: 'ports'
    git: 'https://github.com/KDE/kglobalaccel.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kguiaddons
    subdir: 'ports'
    git: 'https://github.com/KDE/kguiaddons.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: ki18n
    subdir: 'ports'
    git: 'https://github.com/KDE/ki18n.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kiconthemes
    subdir: 'ports'
    git: 'https://github.com/KDE/kiconthemes.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kidletime
    subdir: 'ports'
    git: 'https://github.com/KDE/kidletime.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kio
    subdir: 'ports'
    git: 'https://github.com/KDE/kio.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kirigami
    subdir: 'ports'
    git: 'https://github.com/KDE/kirigami.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kitemviews
    subdir: 'ports'
    git: 'https://github.com/KDE/kitemviews.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kjobwidgets
    subdir: 'ports'
    git: 'https://github.com/KDE/kjobwidgets.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: knewstuff
    subdir: 'ports'
    git: 'https://github.com/KDE/knewstuff.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: knotifications
    subdir: 'ports'
    git: 'https://github.com/KDE/knotifications.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: knotifyconfig
    subdir: 'ports'
    git: 'https://github.com/KDE/knotifyconfig.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kpackage
    subdir: 'ports'
    git: 'https://github.com/KDE/kpackage.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kparts
    subdir: 'ports'
    git: 'https://github.com/KDE/kparts.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kservice
    subdir: 'ports'
    git: 'https://github.com/KDE/kservice.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kstatusnotifieritem
    subdir: 'ports'
    git: 'https://github.com/KDE/kstatusnotifieritem.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: ktextwidgets
    subdir: 'ports'
    git: 'https://github.com/KDE/ktextwidgets.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kwidgetsaddons
    subdir: 'ports'
    git: 'https://github.com/KDE/kwidgetsaddons.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kwindowsystem
    subdir: 'ports'
    git: 'https://github.com/KDE/kwindowsystem.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: kxmlgui
    subdir: 'ports'
    git: 'https://github.com/KDE/kxmlgui.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: solid
    subdir: 'ports'
    git: 'https://github.com/KDE/solid.git'
    tag: 'v6.11.0'
    version: '6.11.0'

  - name: sonnet
    subdir: 'ports'
    git: 'https://github.com/KDE/sonnet.git'
    tag: 'v6.11.0'
    version: '6.11.0'

tools:
  - name: host-breeze-icons
    architecture: noarch
    from_source: breeze-icons
    tools_required:
      - host-cmake
      - host-qt6
      - host-ecm
      - host-ninja
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=@PREFIX@/lib/qt6/qml'
        - '-DKDE_INSTALL_LIBEXECDIR_KF=@PREFIX@/libexec'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DBINARY_ICONS_RESOURCE=ON'
        - '-DSKIP_INSTALL_ICONS=OFF'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['ninja']
    install:
      - args: ['ninja', 'install']

  - name: host-ecm
    architecture: noarch
    from_source: extra-cmake-modules
    tools_required:
      - host-cmake
      - host-ninja
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['cmake', '--build', '.', '--parallel', '@PARALLELISM@']
    install:
      - args: ['cmake', '--install', '.']

  - name: host-kconfig
    architecture: noarch
    from_source: kconfig
    tools_required:
      - host-cmake
      - host-qt6
      - host-ecm
      - host-ninja
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=@PREFIX@/lib/qt6/qml'
        - '-DKDE_INSTALL_LIBEXECDIR_KF=@PREFIX@/libexec'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DKCONFIG_USE_DBUS=TRUE'
        - '-DKCONFIG_USE_QML=TRUE'
        - '@THIS_SOURCE_DIR@'
    compile:
      - args: ['ninja']
    install:
      - args: ['ninja', 'install']

packages:
  - name: attica
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing access to Open Collaboration Services
      description: This package provides a framework providing access to Open Collaboration Services.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: attica
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: breeze-icons
    architecture: '@OPTION:arch@'
    metadata:
      summary: Breeze SVG icon theme
      description: The Breeze Icons package contains the default icons for KDE Plasma applications, but it can be used for other window environments.
      spdx: 'LGPL-3.0-only'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: breeze-icons
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-ninja
      - host-breeze-icons
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DBINARY_ICONS_RESOURCE=ON'
        - '-DSKIP_INSTALL_ICONS=OFF'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: karchive
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for reading, creation, and manipulation of various archive formats
      description: This package provides a framework for reading, creation, and manipulation of various archive formats.
      spdx: 'LGPL-2.1-only GPL-2.0-only'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: karchive
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - bzip2
      - zstd
      - zlib
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kauth
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework to let applications perform actions as a privileged user
      description: This package provides a framework to let applications perform actions as a privileged user.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kauth
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcoreaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kbookmarks
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for managing bookmarks stored in XBEL format
      description: This package provides a framework for managing bookmarks stored in XBEL format.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kbookmarks
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kiconthemes
      - kwidgetsaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kcodecs
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for manipulating strings using various encodings
      description: This package provides a framework for manipulating strings using various encodings.
      spdx: 'LGPL-2.0-or-later GPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kcodecs
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kcolorscheme
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for downloading and sharing additional application data
      description: This package provides a framework for downloading and sharing additional application data.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kcolorscheme
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - kconfig
      - kguiaddons
      - ki18n
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kcompletion
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for common completion tasks such as filename or URL completion
      description: This package provides a framework for common completion tasks such as filename or URL completion.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kcompletion
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcodecs
      - kconfig
      - kcoreaddons
      - kwidgetsaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kconfig
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for reading and writing configuration
      description: This package provides a framework for reading and writing configuration.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kconfig
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_LIBEXECDIR_KF=/usr/libexec'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DKCONFIG_USE_DBUS=TRUE'
        - '-DKCONFIG_USE_QML=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kconfigwidgets
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing an assortment of configuration-related widgets
      description: This package provides a framework providing an assortment of configuration-related widgets.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kconfigwidgets
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcodecs
      - kcolorscheme
      - kconfig
      - kcoreaddons
      - kguiaddons
      - ki18n
      - kwidgetsaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kcoreaddons
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for solving common problems such as caching, randomisation, and more
      description: This package provides a framework for solving common problems such as caching, randomisation, and more.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kcoreaddons
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - systemd
    revision: 3
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kcrash
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for intercepting and handling application crashes
      description: This package provides a framework for intercepting and handling application crashes.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kcrash
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcoreaddons
      - libice
      - libx11
      - xorg-proto
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_X11=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kdbusaddons
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for registering services and applications per freedesktop standards
      description: This package provides a framework for registering services and applications per freedesktop standards.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kdbusaddons
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_X11=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kded
    architecture: '@OPTION:arch@'
    metadata:
      summary: Central daemon of KDE workspaces
      description: This package provides the central daemon of KDE workspaces.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kded
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kcoreaddons
      - kcrash
      - kdbusaddons
      - kservice
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kglobalaccel
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework to handle global shortcuts
      description: This package provides a framework to handle global shortcuts.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kglobalaccel
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kguiaddons
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing assorted high-level user interface components
      description: This package provides a framework providing assorted high-level user interface components.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kguiaddons
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtwayland6
      - wayland
      - plasma-wayland-protocols
      - wayland-protocols
      - libx11
      - libxcb
      - xorg-proto
      - libice
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DBUILD_GEO_SCHEME_HANDLER=ON'
        - '-DWITH_DBUS=ON'
        - '-DWITH_WAYLAND=ON'
        - '-DWITH_X11=ON'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: ki18n
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework based on Gettext for internationalizing user interface text
      description: This package provides a framework based on Gettext for internationalizing user interface text.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: ki18n
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - libintl
      - iso-codes
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kiconthemes
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for icon theming and configuration
      description: This package provides a framework for icon theming and configuration.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kiconthemes
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - qtsvg6
      - karchive
      - kcolorscheme
      - kconfig
      - kconfigwidgets
      - ki18n
      - kwidgetsaddons
      - breeze-icons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kidletime
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for detection and notification of device idle time
      description: This package provides a framework for detection and notification of device idle time.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kidletime
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtwayland6
      - wayland
      - libx11
      - libxcb
      - libxext
      - libxscrnsaver
      - plasma-wayland-protocols
      - wayland-protocols
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_WAYLAND=TRUE'
        - '-DWITH_X11=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kio
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing transparent file and data management
      description: This package provides a framework providing transparent file and data management.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kio
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - kauth
      - kbookmarks
      - kcodecs
      - kcolorscheme
      - kcompletion
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kcrash
      - kdbusaddons
      - kded
      - kguiaddons
      - ki18n
      - kiconthemes
      - kitemviews
      - kjobwidgets
      - knotifications
      - kservice
      - ktextwidgets
      - kwidgetsaddons
      - kwindowsystem
      - kxmlgui
      - solid
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_WAYLAND=TRUE'
        - '-DWITH_X11=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kirigami
    architecture: '@OPTION:arch@'
    metadata:
      summary: Lightweight user interface framework for mobile and convergent applications
      description: This package provides a lightweight user interface framework for mobile and convergent applications.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://techbase.kde.org/Kirigami'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kirigami
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - qtsvg6
      - qt5compat
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DBUILD_EXAMPLES=OFF'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kitemviews
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing additional widgets for item models
      description: This package provides a framework providing additional widgets for item models.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kitemviews
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kjobwidgets
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing assorted widgets for showing the progress of jobs
      description: This package provides a framework providing assorted widgets for showing the progress of jobs.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kjobwidgets
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcoreaddons
      - knotifications
      - kwidgetsaddons
      - libx11
      - libice
      - xorg-proto
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: knewstuff
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for downloading and sharing additional application data
      description: This package provides a framework for downloading and sharing additional application data.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: knewstuff
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - attica
      - karchive
      - kconfig
      - kcoreaddons
      - ki18n
      - kpackage
      - kirigami
      - kwidgetsaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: knotifications
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for notifying the user of an event
      description: This package provides a framework for notifying the user of an event.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: knotifications
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - kconfig
      - libcanberra
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: knotifyconfig
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for configuring desktop notifications
      description: This package provides a framework for configuring desktop notifications.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: knotifyconfig
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcompletion
      - kconfig
      - ki18n
      - kio
      - libcanberra
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kpackage
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework to install and load packages of non binary content
      description: This package provides a framework to install and load packages of non binary content.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kpackage
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - karchive
      - kcoreaddons
      - ki18n
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kparts
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing elaborate user-interface components
      description: This package provides a framework providing elaborate user-interface components.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kparts
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kcoreaddons
      - ki18n
      - kiconthemes
      - kio
      - kjobwidgets
      - kservice
      - kwidgetsaddons
      - kxmlgui
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: ktextwidgets
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing an assortment of widgets for displaying and editing text
      description: This package provides a framework providing an assortment of widgets for displaying and editing text.
      spdx: 'LGPL-2.0-or-later LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: ktextwidgets
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kcompletion
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - ki18n
      - kservice
      - kwidgetsaddons
      - sonnet
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DWITH_TEXT_TO_SPEECH=FALSE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kservice
    architecture: '@OPTION:arch@'
    metadata:
      summary: Advanced plugin and service introspection
      description: This package provides a framework for advanced plugin and service introspection.
      spdx: 'LGPL-2.0-only LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kservice
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kcoreaddons
      - kdbusaddons
      - ki18n
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kstatusnotifieritem
    architecture: '@OPTION:arch@'
    metadata:
      summary: Implementation of Status Notifier Items
      description: This package provides an implementation of Status Notifier Items.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kstatusnotifieritem
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kwindowsystem
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kwallet
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing desktop-wide storage for passwords
      description: This package provides a framework providing desktop-wide storage for passwords.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    source:
      subdir: 'ports'
      git: 'https://github.com/KDE/kwallet.git'
      tag: 'v6.11.0'
      version: '6.11.0'
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - host-qca
    pkgs_required:
      - mlibc
      - qtbase6
      - qca
      - libgcrypt
      - kcolorscheme
      - kconfig
      - kcoreaddons
      - kcrash
      - kdbusaddons
      - ki18n
      - knotifications
      - kservice
      - kwidgetsaddons
      - kwindowsystem
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kwidgetsaddons
    architecture: '@OPTION:arch@'
    metadata:
      summary: An assortment of high-level widgets for common tasks
      description: This package provides an assortment of high-level widgets for common tasks.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kwidgetsaddons
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kwindowsystem
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework providing access to properties and features of the window manager
      description: This package provides a framework providing access to properties and features of the window manager.
      spdx: 'LGPL-2.1-only LGPL-3.0-only MIT'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kwindowsystem
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
      - wayland-scanner
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - qtwayland6
      - plasma-wayland-protocols
      - wayland
      - wayland-protocols
      - libx11
      - libxcb
      - libxfixes
      - xorg-proto
      - xcb-util-keysyms
      - libice
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DKWINDOWSYSTEM_WAYLAND=TRUE'
        - '-DKWINDOWSYSTEM_X11=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: kxmlgui
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for managing menu and toolbar actions in an abstract way
      description: This package provides a framework for managing menu and toolbar actions in an abstract way.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: kxmlgui
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - kconfig
      - kconfigwidgets
      - kcoreaddons
      - kglobalaccel
      - kguiaddons
      - ki18n
      - kiconthemes
      - kitemviews
      - kwidgetsaddons
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: solid
    architecture: '@OPTION:arch@'
    metadata:
      summary: Provider for platform independent hardware discovery, abstraction and management
      description: This package provides a provider for platform independent hardware discovery, abstraction and management.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: solid
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - util-linux-libs
      - systemd
    revision: 3
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: sonnet
    architecture: '@OPTION:arch@'
    metadata:
      summary: Framework for providing spell-checking through abstraction of popular backends
      description: This package provides a framework for providing spell-checking through abstraction of popular backends.
      spdx: 'LGPL-2.0-or-later LGPL-2.1-or-later'
      website: 'https://develop.kde.org/products/frameworks/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['kde-frameworks']
    from_source: sonnet
    tools_required:
      - system-gcc
      - host-cmake
      - host-qt6
      - host-ecm
    pkgs_required:
      - mlibc
      - qtbase6
      - qtdeclarative6
      - hunspell
    revision: 2
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain-@OPTION:arch-triple@.txt'
        - '-DECM_DIR=@BUILD_ROOT@/tools/host-ecm'
        - '-DCMAKE_BUILD_TYPE=Debug'
        ### from ecm.class
        - '-DQT_MAJOR_VERSION=6'
        - '-DBUILD_TESTING=OFF'
        - '-DBUILD_QCH=FALSE'
        - '-DKDE_INSTALL_USE_QT_SYS_PATHS=ON'
        - '-DKDE_INSTALL_QMLDIR=/usr/lib/qt6/qml'
        - '-DKDE_INSTALL_PLUGINDIR=/usr/lib/qt6/plugins'
        - '-DKDE_INSTALL_QTPLUGINDIR=/usr/lib/qt6/plugins'
        ### end ecm.class
        - '-DKF_IGNORE_PLATFORM_CHECK=TRUE' # We're porting, and this is the recommended way to do it.
        - '-DSONNET_USE_QML=TRUE'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

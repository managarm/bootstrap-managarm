!<tag:y4.managarm.org:preamble>
import:
  - !managarm
---
tasks:
  - name: useful-image-dependencies
    pkgs_required:
      - base
      - weston-desktop
    tools_required:
      - system-gcc
    args: ''

  - name: update-initrd
    pkgs_required:
      - gcc
      - managarm-kernel
      - managarm-system
    tasks_required:
      - task: useful-image-dependencies
        order_only: true
      - task: initialize-empty-image
        order_only: true
    sources_required:
      - managarm
    tools_required:
      - cross-binutils
    args:
      - '@SYSROOT_DIR@/usr/managarm/bin/gen-initrd.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - '--sysroot=@SYSROOT_DIR@'
    workdir: '@BUILD_ROOT@'

  - name: initialize-empty-image
    sources_required:
      - image_create
    tools_required:
      - host-limine
    args: |
      if [ "@OPTION:arch@" == x86_64 ]; then
          biosboot=-b # Install the BIOS bootloader only on x86_64.
      fi
      @SOURCE_ROOT@/ports/image_create/image_create.sh \
      -oimage \
      -s@OPTION:image-size@ \
      -pgpt \
      -text2 \
      -llimine \
      -a@OPTION:arch@ \
      -e \
      $biosboot
    environ:
      'LIMINE_BIN_DIR': '@BUILD_ROOT@/tools/host-limine/share/limine'
      'LIMINE_TOOL': '@BUILD_ROOT@/tools/host-limine/share/limine/limine'
      'GPT_TYPE': '64212B3B-56A1-4DFB-971E-BC8CD027996A'
    workdir: '@BUILD_ROOT@'

  - name: make-image
    pkgs_required:
      - core-files
      - limine
      - managarm-kernel
      - managarm-kernel-uefi
      - managarm-system
    tools_required:
      - tool: host-limine
        expose: false
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - '--mount-using'
      - '@OPTION:mount-using@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: remake-image
    pkgs_required:
      - core-files
      - limine
      - managarm-kernel
      - managarm-kernel-uefi
      - managarm-system
    tools_required:
      - tool: host-limine
        expose: false
    tasks_required:
      - update-initrd
    args:
      - '@SOURCE_ROOT@/scripts/update-image.py'
      - '--triple'
      - '@OPTION:arch-triple@'
      - 'remake'
    workdir: '@BUILD_ROOT@'

  - name: xz-image
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    artifact_files:
      - name: image.xz
        architecture: '@OPTION:arch@'
        path: '@BUILD_ROOT@'
    args: ['xz', '--fast', '--keep', '@BUILD_ROOT@/image']

  - name: qemu
    tools_required:
      - tool: ovmf
        expose: false
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/vm-util.py'
      - 'qemu'
      - '--arch'
      - '@OPTION:arch@'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: test-image
    tools_required:
      - tool: ovmf
        expose: false
    tasks_required:
      - task: make-image
        order_only: true
      - task: remake-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/vm-util.py'
      - 'qemu'
      - '--arch'
      - '@OPTION:arch@'
      - '--timeout=1200'
      - '--io-timeout=300'
      - '--expect'
      - "launching '/usr/libexec/weston-desktop-shell'"
    environ:
      QFLAGS: '-snapshot -display none'
    workdir: '@BUILD_ROOT@'
    containerless: true

  - name: mlibc-docs
    pkgs_required:
      - mlibc-docs
    args:
      - 'python'
      - '-m'
      - 'http.server'
      - '8080'
      - '-d'
      - '@BUILD_ROOT@/pkg-builds/mlibc-docs/docs'
    containerless: true

  - name: mlibc-sysdeps
    args:
      - '@SOURCE_ROOT@/scripts/compile-mlibc-sysdeps.sh'
      - '@SOURCE_ROOT@/mlibc'
      - '@SYSROOT_DIR@/usr/src/linux-headers'
    workdir: '@BUILD_ROOT@'

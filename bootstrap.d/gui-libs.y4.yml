!<tag:y4.managarm.org:preamble>
import:
  - !managarm
---
packages:
  - name: gtk4
    architecture: '@OPTION:arch@'
    metadata:
      summary: GTK is a multi-platform toolkit for creating graphical user interfaces
      description: This package provides libraries used for creating graphical user interfaces for applications.
      spdx: 'LGPL-2.0-or-later'
      website: 'https://www.gtk.org/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://gitlab.gnome.org/GNOME/gtk.git'
      tag: '4.12.5'
      version: '4.12.5'
    tools_required:
      - system-gcc
      - host-pkg-config
      - wayland-scanner
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-mlibc
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-gobject-introspection
      - host-python
      - host-glib
    pkgs_required:
      - mlibc
      - glib
      - cairo
      - pango
      - fribidi
      - harfbuzz
      - gdk-pixbuf
      - libpng
      - libtiff
      - libjpeg-turbo
      - libepoxy
      - libxkbcommon
      - graphene
      - iso-codes
      - wayland
      - wayland-protocols
      - libx11
      - libxrandr
      - libxrender
      - libxi
      - libxext
      - libxcursor
      - libxdamage
      - libxfixes
      - fontconfig
      - libxinerama
      - !managarm::arch_dep
        arch: [x86_64]
        item: gobject-introspection
      - gst-plugins-good
      - gst-plugins-bad
    revision: 2
    configure:
      - args:
        - 'meson'
        - 'setup'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--prefix=/usr'
        - '--buildtype=release'
        - '--wrap-mode=nodownload'
        - !managarm::arch_ite
          arch: [x86_64]
          then: '-Dintrospection=enabled'
          else: '-Dintrospection=disabled'
        - '-Dbroadway-backend=true'
        - '-Dwayland-backend=true'
        - '-Dx11-backend=true'
        - '-Dcloudproviders=disabled'
        - '-Dtracker=disabled'
        - '-Dcolord=disabled'
        - '-Dman-pages=false'
        - '-Dsysprof=disabled'
        - '-Dvulkan=disabled'
        - '-Dprint-cups=disabled'
        - '-Ddocumentation=false'
        - '-Dscreenshots=false'
        - '@THIS_SOURCE_DIR@'
        environ:
          # Same as below
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
    build:
      - args: ['ninja']
        environ:
          # Library path for our run-wrapper that allows it to load managarm libraries
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          # Similar to above, but using a nasty (but working) hack lets us use a Linux mlibc build to execute an
          # executable that was cross-compiled for managarm
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          # This is a custom environment variable which tells g-ir-scanner what to use instead of ldd
          # We point it at our native ldd-wrapper that's installed as part of host-gobject-introspection
          GI_LDD_WRAPPER: ldd-wrapper
          # This tells g-ir-scanner what program should be used for "cross-launching" the executables it builds
          GI_CROSS_LAUNCHER: run-wrapper
          # Path to the introspection data installed by other packages
          GI_GIR_PATH: '@SYSROOT_DIR@/usr/share/gir-1.0'
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
          # Library path for our run-wrapper that allows it to load managarm libraries
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          # Similar to above, but using a nasty (but working) hack lets us use a Linux mlibc build to execute an
          # executable that was cross-compiled for managarm
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          # This is a custom environment variable which tells g-ir-scanner what to use instead of ldd
          # We point it at our native ldd-wrapper that's installed as part of host-gobject-introspection
          GI_LDD_WRAPPER: ldd-wrapper
          # This tells g-ir-scanner what program should be used for "cross-launching" the executables it builds
          GI_CROSS_LAUNCHER: run-wrapper
          # Path to the introspection data installed by other packages
          GI_GIR_PATH: '@SYSROOT_DIR@/usr/share/gir-1.0'
    scripts:
        post_install:
          - args: ['glib-compile-schemas', '/usr/share/glib-2.0/schemas']

  - name: gtksourceview5
    stability_level: 'broken' # Downstream user of gtk4 and that is broken
    architecture: '@OPTION:arch@'
    metadata:
      summary: A text widget implementing syntax highlighting and other features
      description: This package contains a library used for extending the GTK text functions to include syntax highlighting.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://wiki.gnome.org/Projects/GtkSourceView'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://gitlab.gnome.org/GNOME/gtksourceview.git'
      tag: '5.11.0'
      version: '5.11.0'
    tools_required:
      - system-gcc
      - wayland-scanner
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
      - host-vala
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-mlibc
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-gobject-introspection
      - host-python
    pkgs_required:
      - mlibc
      - glib
      - gtk4
      - libxml
      - fribidi
      - fontconfig
      - pango
      - pcre2
      - !managarm::arch_dep
        arch: [x86_64]
        item: gobject-introspection
    revision: 1
    configure:
      - args:
        - 'meson'
        - 'setup'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--prefix=/usr'
        - '--buildtype=release'
        - '--wrap-mode=nodownload'
        - '-Dinstall_tests=false'
        - !managarm::arch_ite
          arch: [x86_64]
          then: '-Dintrospection=enabled'
          else: '-Dintrospection=disabled'
        - '-Dvapi=true'
        - '-Dgtk_doc=false'
        - '-Dsysprof=false'
        - '@THIS_SOURCE_DIR@'
        environ:
          # Same as below
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          VALADIR: '@SYSROOT_DIR@/usr/share/vala/vapi'
          # Wrapper to add our valadir
          VAPIGEN: 'cross-vapigen'
    build:
      - args: ['ninja']
        environ:
          # Library path for our run-wrapper that allows it to load managarm libraries
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          # Similar to above, but using a nasty (but working) hack lets us use a Linux mlibc build to execute an
          # executable that was cross-compiled for managarm
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          # This is a custom environment variable which tells g-ir-scanner what to use instead of ldd
          # We point it at our native ldd-wrapper that's installed as part of host-gobject-introspection
          GI_LDD_WRAPPER: ldd-wrapper
          # This tells g-ir-scanner what program should be used for "cross-launching" the executables it builds
          GI_CROSS_LAUNCHER: run-wrapper
          # Path to the introspection data installed by other packages
          GI_GIR_PATH: '@SYSROOT_DIR@/usr/share/gir-1.0'
          VALADIR: '@SYSROOT_DIR@/usr/share/vala/vapi'
          # Wrapper to add our valadir
          VALAC: 'cross-valac'
          # Wrapper to add our valadir
          VAPIGEN: 'cross-vapigen'
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
    scripts:
        post_install:
          - args: ['gtk4-update-icon-cache', '-q', '-t', '-f', '/usr/share/icons/hicolor']

  - name: libadwaita
    stability_level: 'broken' # Appstream is also broken
    architecture: '@OPTION:arch@'
    metadata:
      summary: Building blocks for modern GNOME applications
      description: This package provides additional GTK4 UI widgets for use in developing user interfaces. It is used primarily for GNOME applications.
      spdx: 'LGPL-2.1-or-later'
      website: 'https://gnome.pages.gitlab.gnome.org/libadwaita/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://gitlab.gnome.org/GNOME/libadwaita.git'
      tag: '1.4.2'
      version: '1.4.2'
    tools_required:
      - system-gcc
      - wayland-scanner
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
      - host-vala
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-mlibc
      - !managarm::arch_dep
        arch: [x86_64]
        item: host-gobject-introspection
      - host-python
    pkgs_required:
      - mlibc
      - glib
      - gtk4
      - appstream
      - fribidi
      - !managarm::arch_dep
        arch: [x86_64]
        item: gobject-introspection
    revision: 1
    configure:
      - args:
        - 'meson'
        - 'setup'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--native-file'
        - '@SOURCE_ROOT@/scripts/meson.native-file'
        - '--prefix=/usr'
        - '--buildtype=release'
        - '--wrap-mode=nodownload'
        - '-Dprofiling=false'
        - !managarm::arch_ite
          arch: [x86_64]
          then: '-Dintrospection=enabled'
          else: '-Dintrospection=disabled'
        - '-Dvapi=true'
        - '-Dgtk_doc=false'
        - '-Dtests=false'
        - '-Dexamples=false'
        - '@THIS_SOURCE_DIR@'
        environ:
          # Same as below
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          VALADIR: '@SYSROOT_DIR@/usr/share/vala/vapi'
          # Wrapper to add our valadir
          VAPIGEN: 'cross-vapigen'
    build:
      - args: ['ninja']
        environ:
          # Library path for our run-wrapper that allows it to load managarm libraries
          RUN_WRAPPER_LD_LIBRARY_PATH: '@BUILD_ROOT@/tools/host-mlibc/lib:@SYSROOT_DIR@/usr/lib:@SYSROOT_DIR@/usr/lib64:@THIS_BUILD_DIR@/girepository'
          # Similar to above, but using a nasty (but working) hack lets us use a Linux mlibc build to execute an
          # executable that was cross-compiled for managarm
          RUN_WRAPPER_INTERP: '@BUILD_ROOT@/tools/host-mlibc/lib/ld.so'
          # This is a custom environment variable which tells g-ir-scanner what to use instead of ldd
          # We point it at our native ldd-wrapper that's installed as part of host-gobject-introspection
          GI_LDD_WRAPPER: ldd-wrapper
          # This tells g-ir-scanner what program should be used for "cross-launching" the executables it builds
          GI_CROSS_LAUNCHER: run-wrapper
          # Path to the introspection data installed by other packages
          GI_GIR_PATH: '@SYSROOT_DIR@/usr/share/gir-1.0'
          VALADIR: '@SYSROOT_DIR@/usr/share/vala/vapi'
          # Wrapper to add our valadir
          VALAC: 'cross-valac'
          # Wrapper to add our valadir
          VAPIGEN: 'cross-vapigen'
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: libwpe
    architecture: '@OPTION:arch@'
    metadata:
      summary: Platform-agnostic interfaces for WPE WebKit
      description: The libwpe package contains a general purpose library for WPE WebKit and the WPE Renderer.
      spdx: 'BSD-2-Clause'
      website: 'https://wpewebkit.org/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://github.com/WebPlatformForEmbedded/libwpe.git'
      tag: '1.16.2'
      version: '1.16.2'
    tools_required:
      - system-gcc
      - host-pkg-config
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
    pkgs_required:
      - mlibc
      - mesa
      - libxkbcommon
    revision: 2
    configure:
      - args:
        - 'meson'
        - 'setup'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Denable-xkb=true'
        - '-Dbuild-docs=false'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: wlroots
    architecture: '@OPTION:arch@'
    metadata:
      summary: Pluggable, composable, unopinionated modules for building a Wayland compositor
      description: wlroots implements a huge variety of Wayland compositor features and implements them right, so you can focus on the features that make your compositor unique. By using wlroots, you get high performance, excellent hardware compatibility, broad support for many wayland interfaces, and comfortable development tools - or any subset of these features you like, because all of them work independently of one another and freely compose with anything you want to implement yourself.
      spdx: MIT
      website: 'https://gitlab.freedesktop.org/wlroots/wlroots'
      maintainer: "no92 <no92.mail@gmail.com>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/wlroots/wlroots/'
      tag: '0.18.2'
      version: '0.18.2'
    tools_required:
      - system-gcc
      - host-libtool
      - host-cmake
      - wayland-scanner
      - host-hwdata
      - host-pkg-config
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
      - virtual: pkgconfig-for-host
        program_name: host-pkg-config
    pkgs_required:
      - mlibc
      - systemd
      - libdisplay-info
      - libdrm
      - libinput
      - libxcb
      - libxkbcommon
      - pixman
      - seatd
      - wayland
      - wayland-protocols
      - xcb-util-image
      - xcb-util-wm
      - xwayland
      - hwdata
      - mesa
    revision: 2
    configure:
      - args: 'sed -i s#{XBSTRAP_SYSTEM_ROOT}#@SYSROOT_DIR@# @THIS_SOURCE_DIR@/xwayland/meson.build'
      - args:
        - 'meson'
        - 'setup'
        - '--native-file'
        - '@SOURCE_ROOT@/scripts/meson.native-file'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--prefix=/usr'
        - '--buildtype=debugoptimized'
        - '-Dbackends=drm,libinput'
        - '-Dexamples=false'
        - '-Dxwayland=enabled'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: wpebackend-fdo
    architecture: '@OPTION:arch@'
    metadata:
      summary: WPE backend designed for Linux desktop systems
      description: The wpebackend-fdo package contains the Freedesktop.org backend for WPE WebKit and the WPE renderer.
      spdx: 'BSD-2-Clause'
      website: 'https://wpewebkit.org/'
      maintainer: "Dennis Bonke <dennis@managarm.org>"
      categories: ['gui-libs']
    source:
      subdir: 'ports'
      git: 'https://github.com/Igalia/WPEBackend-fdo.git'
      tag: '1.16.0'
      version: '1.16.0'
    tools_required:
      - system-gcc
      - host-pkg-config
      - virtual: pkgconfig-for-target
        triple: "@OPTION:arch-triple@"
      - wayland-scanner
    pkgs_required:
      - mlibc
      - libwpe
      - wayland-protocols
      - wayland
      - libepoxy
      - glib
    revision: 2
    configure:
      - args:
        - 'meson'
        - 'setup'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson-@OPTION:arch-triple@.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dbuild_docs=false'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

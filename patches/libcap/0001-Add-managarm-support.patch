From daa32343c824e64875f3fad7e231de713ff5e112 Mon Sep 17 00:00:00 2001
From: no92 <no92.mail@gmail.com>
Date: Sat, 23 Nov 2024 15:34:18 +0100
Subject: [PATCH] Add managarm support

---
 libcap/cap_proc.c | 21 +++++++++++++++++++++
 psx/psx.c         |  8 ++++++++
 psx/psx_calls.c   |  8 ++++++++
 3 files changed, 37 insertions(+)

diff --git a/libcap/cap_proc.c b/libcap/cap_proc.c
index 09b74ca..27c22c2 100644
--- a/libcap/cap_proc.c
+++ b/libcap/cap_proc.c
@@ -13,13 +13,26 @@
 #include <grp.h>
 #include <sys/prctl.h>
 #include <sys/securebits.h>
+#if !defined(__managarm__)
 #include <sys/syscall.h>
+#endif
 #include <unistd.h>
 #include <sys/types.h>
 #include <sys/wait.h>
 
 #include "libcap.h"
 
+#if defined(__managarm__)
+
+#define SYS_capset -1
+#define SYS_prctl -1
+#define SYS_setuid -1
+#define SYS_setgid -1
+#define SYS_setgroups -1
+#define SYS_chroot -1
+
+#endif
+
 /*
  * libcap uses this abstraction for all system calls that change
  * kernel managed capability state. This permits the user to redirect
@@ -30,14 +43,22 @@
 static long int _cap_syscall3(long int syscall_nr,
 			      long int arg1, long int arg2, long int arg3)
 {
+#if defined(__managarm__)
+    return ENOSYS;
+#else
     return syscall(syscall_nr, arg1, arg2, arg3);
+#endif
 }
 
 static long int _cap_syscall6(long int syscall_nr,
 			      long int arg1, long int arg2, long int arg3,
 			      long int arg4, long int arg5, long int arg6)
 {
+#if defined(__managarm__)
+    return ENOSYS;
+#else
     return syscall(syscall_nr, arg1, arg2, arg3, arg4, arg5, arg6);
+#endif
 }
 
 /*
diff --git a/psx/psx.c b/psx/psx.c
index e3ad106..ad8f95a 100644
--- a/psx/psx.c
+++ b/psx/psx.c
@@ -24,13 +24,21 @@
 #include <stdint.h>
 #include <stdlib.h>
 #include <string.h>
+#if !defined(__managarm__)
 #include <sys/syscall.h>
+#endif
 #include <sys/types.h>
 #include <unistd.h>
 
 #include "psx_syscall.h"
 #include "libpsx.h"
 
+#if defined(__managarm__)
+
+#define syscall(...) (-1)
+
+#endif
+
 #ifdef _PSX_DEBUG_MEMORY
 
 static void *_psx_calloc(const char *file, const int line,
diff --git a/psx/psx_calls.c b/psx/psx_calls.c
index 9662fbd..21f243c 100644
--- a/psx/psx_calls.c
+++ b/psx/psx_calls.c
@@ -14,13 +14,21 @@
 
 #include <signal.h>
 #include <string.h>
+#if defined(__managarm__)
 #include <sys/syscall.h>
+#endif
 #include <sys/wait.h>
 #include <unistd.h>
 
 #include "psx_syscall.h"
 #include "libpsx.h"
 
+#if defined(__managarm__)
+
+#define syscall(...) (-1)
+
+#endif
+
 /*
  * This is terrible, but some of the OS installed <asm/signal.h>
  * headers only seem to know about the legacy 32-bit signal masks. So,
-- 
2.49.0



repository:
  url: 'https://pkgs.managarm.org/nightly'

sources:
  - name: binutils
    subdir: 'ports'
    git: 'git://sourceware.org/git/binutils-gdb.git'
    tag: 'binutils-2_32'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
    regenerate:
      - args: ['autoreconf']
        workdir: '@THIS_SOURCE_DIR@/ld'

  - name: lai
    subdir: 'ports'
    git: 'https://github.com/qword-os/lai.git'
    branch: 'master'

  - name: llvm
    subdir: 'ports'
    git: 'https://github.com/llvm/llvm-project'
    tag: 'llvmorg-9.0.0'

  - name: gcc
    subdir: 'ports'
    git: 'git://gcc.gnu.org/git/gcc.git'
    tag: 'releases/gcc-9.2.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.11
    regenerate:
      # download_prerequisites should probably move to some "post_checkout" step.
      - args: ['./contrib/download_prerequisites']
        workdir: '@THIS_SOURCE_DIR@'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/gcc'
      - args: ['autoconf']
        workdir: '@THIS_SOURCE_DIR@/libstdc++-v3'

  - name: protobuf
    subdir: 'ports'
    git: 'https://github.com/google/protobuf.git'
    tag: 'v3.1.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.11
      - host-libtool
    regenerate:
      - args: ['./autogen.sh']

  - name: managarm
    git: 'https://github.com/managarm/managarm.git'
    branch: 'master'
    sources_required:
      - acpica
      - cxxshim
      - frigg
      - lai
      - libsmarter
    regenerate:
      - args: ['mkdir', '-p', '@THIS_SOURCE_DIR@/subprojects']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/acpica', '@THIS_SOURCE_DIR@/subprojects/acpica']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/cxxshim', '@THIS_SOURCE_DIR@/subprojects/cxxshim']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/frigg', '@THIS_SOURCE_DIR@/subprojects/frigg']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/lai', '@THIS_SOURCE_DIR@/subprojects/lai']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/libsmarter', '@THIS_SOURCE_DIR@/subprojects/libsmarter']

  - name: mlibc
    git: 'https://github.com/managarm/mlibc.git'
    branch: 'master'
    sources_required:
      - cxxshim
      - frigg
      - libdrm
      - managarm
    regenerate:
      - args: ['ln', '-sf', '@SOURCE_ROOT@/managarm', '@THIS_SOURCE_DIR@/subprojects/managarm']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/cxxshim', '@THIS_SOURCE_DIR@/subprojects/cxxshim']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/ports/frigg', '@THIS_SOURCE_DIR@/subprojects/frigg']

  - name: wayland
    subdir: 'ports'
    git: 'https://github.com/wayland-project/wayland.git'
    tag: '1.17.0'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - host-pkg-config
    regenerate:
      - args: ['./autogen.sh']
        environ:
          'NOCONFIGURE': 'yes'

tools:
  - name: host-autoconf-v2.64
    source:
      name: autoconf-v2.64
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.64.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.64'
    configure:
      # Despite its efforts to be POSIX-compatible, autoconf 2.64 fails to configure on dash
      # (as it assumes that echo does not evaluate backslash escapes).
      # It *also* fails when setting CONFIG_SHELL to /bin/bash.
      # The manual (in section "Defining Variables") mentions this bug and the following
      # workaround: We set *both* CONFIG_SHELL *and* execute the script using /bin/bash.
      - args: ['/bin/bash', '@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
        environ:
          'CONFIG_SHELL': '/bin/bash'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-autoconf-v2.69
    source:
      name: autoconf-v2.69
      subdir: 'ports'
      url: 'https://ftp.gnu.org/gnu/autoconf/autoconf-2.69.tar.xz'
      format: 'tar.xz'
      extract_path: 'autoconf-2.69'
    configure:
      - args: ['@THIS_SOURCE_DIR@/configure', '--prefix=@PREFIX@']
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-automake-v1.11
    source:
      name: automake-v1.11
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/r/automake.git'
      tag: 'v1.11.6'
      tools_required:
        - host-autoconf-v2.69
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.11', '@PREFIX@/share/aclocal']

  - name: host-automake-v1.15
    source:
        name: automake-v1.15
        subdir: 'ports'
        git: 'https://git.savannah.gnu.org/r/automake.git'
        tag: 'v1.15.1'
        tools_required:
          - host-autoconf-v2.69
        regenerate:
          - args: ['./bootstrap']
    tools_required:
      - host-autoconf-v2.69
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - 'MAKEINFO=/bin/true'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      # Stop aclocal from complaining.
      - args: ['ln', '-sf', '@PREFIX@/share/aclocal-1.15', '@PREFIX@/share/aclocal']

  - name: host-managarm-tools
    from_source: managarm
    tools_required:
      - tool: host-protoc
        recursive: true
    configure:
      - args:
        - 'meson'
        - '--prefix=@PREFIX@'
        - '-Dbuild_tools=true'
        - '@THIS_SOURCE_DIR@'
        environ:
          # This can be seen as a hack -- remove it.
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'
    compile:
      - args: ['ninja']
        environ:
          # This can be seen as a hack -- remove it.
          'CPATH': '@BUILD_ROOT@/tools/host-protoc/include'
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'
    install:
      - args: ['ninja', 'install']
        environ:
          # This can be seen as a hack -- remove it.
          'CPATH': '@BUILD_ROOT@/tools/host-protoc/include'
          'LIBRARY_PATH': '@BUILD_ROOT@/tools/host-protoc/lib'

  - name: host-libtool
    exports_aclocal: true
    source:
      name: libtool
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/r/libtool.git'
      tag: 'v2.4.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        # libtool's ./bootstrap does a shallow clone with insufficient depth.
        - args: ['git', 'submodule', 'update', '--init']
        - args: ['./bootstrap']
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-llvm-toolchain
    from_source: llvm
    tools_required:
      - host-cmake
      - system-gcc
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_INSTALL_PREFIX=@PREFIX@'

        # LLVM configuration options.
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_TARGETS_TO_BUILD=X86'
        - '-DLLVM_ENABLE_PROJECTS=clang'

        # clang configuration options.
        - '-DDEFAULT_SYSROOT=@SYSROOT_DIR@'
        - '@THIS_SOURCE_DIR@/llvm'
    compile:
      - args: ['ninja']
      # Build on a single CPU to prevent OOM on smaller systems.
      #- args: ['ninja', '-j1']
    install:
      - args: ['ninja', 'install']
        quiet: true

  # We could run an external pkg-config; however, we need the aclocal files.
  # The easiest way to ensure that they are available is to just install pkg-config.
  - name: host-pkg-config
    exports_aclocal: true
    source:
      name: 'pkg-config'
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/pkg-config/pkg-config.git'
      tag: 'pkg-config-0.29.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--with-internal-glib'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: cross-binutils
    from_source: binutils
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
    install:
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
      - args: |
          for f in @PREFIX@/bin/x86_64-managarm-*; do
            tf=$(basename $f | sed 's/x86_64-managarm/x86_64-managarm-kernel/')
            ln -sf $(basename $f) @PREFIX@/bin/$tf
          done

  - name: host-cmake
    source:
      name: 'cmake'
      subdir: 'ports'
      git: 'https://gitlab.kitware.com/cmake/cmake.git'
      tag: 'v3.14.5'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/bootstrap'
        - '--prefix=@PREFIX@'
        - '--parallel=@PARALLELISM@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
      - args: ['ln', '-sf', '@SOURCE_ROOT@/scripts/managarm.cmake', '@PREFIX@/share/cmake-3.14/Modules/Platform/']

  - name: host-protoc
    exports_shared_libs: true
    from_source: protobuf
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        # -g blows up the binary size.
        - 'CXXFLAGS=-O2'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: host-xorg-macros
    exports_aclocal: true
    source:
      name: xorg-macros
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/xorg/util/macros.git'
      tag: 'util-macros-1.19.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']

  - name: kernel-gcc
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm-kernel'
        - '--with-sysroot=@BUILD_ROOT@/kernel-root'
        - '--enable-languages=c,c++'
        - '--disable-shared'
        - '--disable-hosted-libstdcxx'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        compile:
          # Copy rudimentary header files into the kernel sysroot.
          - args: |
              mkdir -p @BUILD_ROOT@/kernel-root/usr/include
              cp -r @SOURCE_ROOT@/patches/kernel-libc/* @BUILD_ROOT@/kernel-root/usr/include/
          # Set inhibit_libc to prevent libgcov build.
          # This is also required to correctly build the target libraries later.
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/x86_64-managarm-kernel/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/x86_64-managarm/bin/as',
                               '@PREFIX@/x86_64-managarm-kernel/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/x86_64-managarm/bin/ld',
                               '@PREFIX@/x86_64-managarm-kernel/bin/ld']
      - name: libgcc
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [compiler]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: kernel-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'inhibit_libc=true', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: system-gcc
    from_source: gcc
    tools_required:
      - tool: cross-binutils
        recursive: true
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--target=x86_64-managarm'
        - '--with-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--disable-multilib'
        - '--enable-initfini-array'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    stages:
      - name: compiler
        pkgs_required:
         - mlibc-headers
        compile:
          # GCC complains if the include directory is non-existant.
          - args: ['mkdir', '-p', '@SYSROOT_DIR@/usr/include']
          - args: ['make', '-j@PARALLELISM@', 'all-gcc']
        install:
          - args: ['make', 'install-gcc']
          # GCC does *not* look for target-prefixed LD/AS.
          # Instead, it searches a list of prefix directories. Link AS/LD to make it happy.
          - args: ['mkdir', '-p', '@PREFIX@/x86_64-managarm/bin']
          - args: ['ln', '-sf', '../../../cross-binutils/x86_64-managarm/bin/as',
                               '@PREFIX@/x86_64-managarm/bin/as']
          - args: ['ln', '-sf', '../../../cross-binutils/x86_64-managarm/bin/ld',
                               '@PREFIX@/x86_64-managarm/bin/ld']
      - name: libgcc
        tools_required:
          - tool: system-gcc
            stage_dependencies: [compiler]
        pkgs_required:
         - mlibc
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libgcc']
        install:
          - args: ['make', 'install-target-libgcc']
      - name: libstdc++
        tools_required:
          - tool: system-gcc
            stage_dependencies: [libgcc]
        compile:
          - args: ['make', '-j@PARALLELISM@', 'all-target-libstdc++-v3']
        install:
          - args: ['make', 'install-target-libstdc++-v3']

  - name: wayland-scanner
    from_source: wayland
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--prefix=@PREFIX@'
        - '--disable-libraries'
        - '--disable-dtd-validation'
        - '--disable-documentation'
    compile:
      - args: ['make', '-j@PARALLELISM@']
    install:
      - args: ['make', 'install']
        quiet: true

packages:
  - name: acpica
    source:
      subdir: 'ports'
      git: 'https://github.com/acpica/acpica.git'
      tag: 'R09_30_16'
    configure: []
    build: []

  - name: bash
    source:
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/r/bash.git'
      tag: 'bash-4.4'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        # While we do not need to regenerate the configure script, we need to touch it
        # after patching config.sub so that make does not try to regenerate it.
        - args: ['autoconf']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--without-bash-malloc'
        - '--disable-nls'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
        quiet: true
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/root/']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc/']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/.bashrc', '@THIS_COLLECT_DIR@/root']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/profile', '@THIS_COLLECT_DIR@/etc']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/bash.bashrc', '@THIS_COLLECT_DIR@/etc']

  - name: binutils
    from_source: binutils
    tools_required:
      - tool: system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--target=x86_64-managarm'
        - '--with-sysroot=/'
        - '--disable-nls'
        # On recent compilers, binutils 2.26 causes implicit-fallthrough warnings, among others.
        - '--disable-werror'
        # -g blows up the binary size.
        - 'CFLAGS=-O2'
    build:
      #- args: ['make', '-j@PARALLELISM@', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'all-binutils', 'all-gas', 'all-ld']
      - args: ['make', 'install-binutils', 'install-gas', 'install-ld']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: boost
    source:
      subdir: 'ports'
      git: 'https://github.com/boostorg/boost.git'
      tag: 'boost-1.62.0'
      regenerate:
        - args: |
            if ! git -C '@THIS_SOURCE_DIR@' remote | grep -q origin; then
              git -C '@THIS_SOURCE_DIR@' remote add origin https://github.com/boostorg/boost.git
            fi
        - args: ['git', '-C', '@THIS_SOURCE_DIR@', 'submodule', 'update', '--init']
        - args: ['./bootstrap.sh']
        - args: ['./b2', 'headers']
    configure: []
    build:
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/include']
      - args: ['cp', '-r', '--dereference', '@THIS_SOURCE_DIR@/boost',
            '@THIS_COLLECT_DIR@/usr/include']

  - name: cairo
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/cairo/cairo.git'
      tag: '1.16.0'
      tools_required:
        - host-autoconf-v2.64
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
      - host-autoconf-v2.64
      - host-automake-v1.11
      - host-libtool
      - host-pkg-config
    pkgs_required:
      - libpng
      - pixman
    configure:
      - args:
        # For now, we build without glesv2 backend as Weston prefers the image backend.
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--disable-xlib'
        environ:
          # freetype-config does not support cross-compilation.
          FREETYPE_CONFIG: 'no'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: fafnir
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/fafnir.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: cxxshim
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/cxxshim.git'
      branch: 'master'
    configure: []
    build: []

  - name: frigg
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/frigg.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: gcc
    default: false
    from_source: gcc
    tools_required:
      - tool: system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--target=x86_64-managarm'
        - '--with-sysroot=/'
        - '--with-build-sysroot=@SYSROOT_DIR@'
        - '--enable-languages=c,c++'
        - '--enable-initfini-array'
        - '--disable-multilib'
        - '--disable-nls'
        # -g blows up GCC's binary size.
        - 'CFLAGS=-O2'
        - 'CXXFLAGS=-O2'
    build:
      #- args: ['make', '-j@PARALLELISM@', 'all-gcc']
      - args: ['make', 'all-gcc', 'all-target-libgcc', 'all-target-libstdc++-v3']
      - args: ['make', 'install-gcc', 'install-target-libgcc', 'install-target-libstdc++-v3']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: coreutils
    source:
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/r/coreutils.git'
      tag: 'v8.30'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.11/share/automake-1.11/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      # Huge hack: coreutils does not compile the build-machine binary make-prime-list
      # using the build-machine compiler. Hence, build and invoke the binary manually here.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
      - args: ['make', 'src/make-prime-list']
      - args: |
          ./src/make-prime-list 5000 > @THIS_SOURCE_DIR@/src/primes.h
      - args: ['make', 'clean']
      # No compile coreutils for the correct target.
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS -Wno-error'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: eudev
    source:
      subdir: 'ports'
      git: 'https://github.com/gentoo/eudev.git'
      tag: 'v3.2.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--disable-blkid'
        - '--disable-selinux'
        - '--disable-kmod'
        - '--disable-mtd-probe'
        - '--disable-rule-generator'
        - '--disable-manpages'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: lewis
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/lewis.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libarchive
    source:
      subdir: 'ports'
      git: 'https://github.com/libarchive/libarchive.git'
      tag: 'v3.4.2'
    tools_required:
      - host-cmake
      - system-gcc
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libasync
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/libasync.git'
      branch: 'master'
    tools_required:
      - system-gcc
    pkgs_required:
      - boost
    configure: []
    build:
      - args:
        - 'make'
        - '-f'
        - '@THIS_SOURCE_DIR@/library.makefile'
        - 'S=@THIS_SOURCE_DIR@'
        - 'DESTDIR=@THIS_COLLECT_DIR@'
        - 'prefix=/usr/'
        - 'CXX=x86_64-managarm-g++'
        - 'LD=x86_64-managarm-ld'
        - 'AS=x86_64-managarm-as'
        - 'install'

  - name: libdrm
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/mesa/drm'
      tag: 'libdrm-2.4.81'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
        - host-xorg-macros
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--disable-intel'
        - '--disable-vmwgfx'
        - '--disable-radeon'
        - '--disable-amdgpu'
        - '--disable-nouveau'
        # We might want to build cairo with OpenGL support.
        # Doing so would introduce a circular dependency here.
        - '--disable-cairo-tests'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libevdev
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/libevdev/libevdev.git'
      tag: 'libevdev-1.5.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libexpat
    source:
      subdir: 'ports'
      git: 'https://github.com/libexpat/libexpat.git'
      tag: 'R_2_2_5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./buildconf.sh']
          workdir: '@THIS_SOURCE_DIR@/expat'
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/expat/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        # We disable xmlwf to avoid building its documentation.
        - '--without-xmlwf'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libffi
    source:
      subdir: 'ports'
      git: 'https://github.com/libffi/libffi.git'
      tag: 'v3.2.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.11
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libinput
    source:
      subdir: 'ports'
      git: 'https://github.com/wayland-project/libinput.git'
      tag: '1.9.902'
    tools_required:
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - eudev
      - libevdev
      - mtdev
    configure:
      - args:
          - 'meson'
          - '--cross-file'
          - '@SOURCE_ROOT@/scripts/meson.cross-file'
          - '--prefix=/usr'
          - '--libdir=lib'
          - '--buildtype=debugoptimized'
          - '-Dlibwacom=false'
          - '-Ddebug-gui=false'
          - '-Dtests=false'
          - '-Ddocumentation=false'
          - '@THIS_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libpng
    source:
      subdir: 'ports'
      git: 'https://git.code.sf.net/p/libpng/code'
      tag: 'v1.6.34'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['git', 'clean', '-xf', '-e', '*.xbstrap']
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libressl
    default: false
    source:
      subdir: 'ports'
      git: 'https://github.com/libressl-portable/portable.git'
      tag: 'v3.0.2'
    tools_required:
      - host-cmake
      - system-gcc
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libsmarter
    source:
      subdir: 'ports'
      git: 'https://github.com/avdgrinten/libsmarter.git'
      branch: 'master'
    tools_required:
      - system-gcc
    configure: []
    build:
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/include']
      - args:
        - 'make'
        - '-f'
        - '@THIS_SOURCE_DIR@/library.makefile'
        - 'S=@THIS_SOURCE_DIR@'
        - 'DESTDIR=@THIS_COLLECT_DIR@'
        - 'prefix=/usr/'
        - 'CXX=x86_64-managarm-g++'
        - 'LD=x86_64-managarm-ld'
        - 'AS=x86_64-managarm-as'
        - 'install'

  - name: libxkbcommon
    source:
      subdir: 'ports'
      git: 'https://github.com/xkbcommon/libxkbcommon.git'
      tag: 'xkbcommon-0.8.0'
    tools_required:
      - host-pkg-config
      - system-gcc
      - wayland-scanner
    pkgs_required:
      - wayland
      - wayland-protocols
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Denable-x11=false'
        - '-Denable-docs=false'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: llvm
    from_source: llvm
    tools_required:
      - host-cmake
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        # We really have to build LLVM in Release mode.
        # Building it in debug mode produces tens of GiB of debugging info.
        - '-DCMAKE_BUILD_TYPE=Release'
        - '-DLLVM_LINK_LLVM_DYLIB=ON'
        # RTTI affects the ABI. Hence, we enable it.
        - '-DLLVM_ENABLE_RTTI=ON'
        - '-DLLVM_TARGETS_TO_BUILD=X86'
        # Disable linking against ncurses, which we do not build with -fPIC.
        - '-DLLVM_ENABLE_TERMINFO=OFF'
        - '@THIS_SOURCE_DIR@/llvm'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: kmscube
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/mesa/kmscube.git'
      branch: 'master'
      commit: b235bae4c674b6ef4ac15a40b46000876bee9425
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - mesa
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: managarm-kernel
    from_source: managarm
    sources_required:
      - frigg
    tools_required:
      - host-llvm-toolchain
      - host-managarm-tools
      - host-protoc
      - kernel-gcc
    pkgs_required:
      - acpica
      - cxxshim
      - frigg
    configure:
      - args: |
          sed -e 's|_BUILD_ROOT_|@BUILD_ROOT@|' @SOURCE_ROOT@/scripts/meson-kernel.cross-file \
              > ./meson-custom.cross-file
      - args:
        - 'meson'
        - '--cross-file=./meson-custom.cross-file'
        - '--prefix=/usr/managarm'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dbuild_kernel=true'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: managarm-system
    from_source: managarm
    tools_required:
      - host-llvm-toolchain
      - host-managarm-tools
      - host-pkg-config
      - host-protoc
      - system-gcc
    pkgs_required:
      - eudev
      - fafnir
      - lewis
      - libasync
      - libdrm
      - libsmarter
      - protobuf
    configure:
      - args: |
          sed -e 's|_BUILD_ROOT_|@BUILD_ROOT@|' @SOURCE_ROOT@/scripts/meson-clang.cross-file \
              > ./meson-custom.cross-file
      - args:
        - 'meson'
        - '--cross-file=./meson-custom.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dbuild_drivers=true'
        - '@THIS_SOURCE_DIR@'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          'DESTDIR': '@THIS_COLLECT_DIR@'
        quiet: true

  - name: mesa
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/mesa/mesa.git'
      tag: 'mesa-19.0.5'
      tools_required:
        - host-pkg-config
    tools_required:
      - host-pkg-config
      - system-gcc
      - wayland-scanner
    pkgs_required:
      - libdrm
      - llvm
      - wayland
      - wayland-protocols
      - zlib
    configure:
      - args: ['cp', '@SOURCE_ROOT@/scripts/meson.cross-file', '.']
      - args:
        - 'sed'
        - '-i'
        - "/^# sed adds binaries here.$/a llvm-config = '@SOURCE_ROOT@/scripts/cross-llvm-config'"
        - 'meson.cross-file'
      - args:
        - 'meson'
        - '--cross-file'
        - 'meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        # The debug build type enables some additional output from Mesa.
        - '--buildtype=debugoptimized'
        #- '--buildtype=debug'
        - '-Dglx=disabled'
        - '-Dplatforms=surfaceless,drm,wayland'
        # The Gallium swrast driver seems to be preferred over dri-swrast.
        - '-Ddri-drivers='
        - '-Dgallium-drivers=swrast'
        - '-Dvulkan-drivers='
        # Force Mesa to build with LLVM.
        - '-Dllvm=true'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: mlibc-headers
    from_source: mlibc
    tools_required:
      - host-managarm-tools
      - host-protoc
    implict_package: true
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '@THIS_SOURCE_DIR@'
        - '-Dheaders_only=true'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: mlibc
    from_source: mlibc
    tools_required:
      - host-managarm-tools
      - tool: system-gcc
        stage_dependencies: [compiler]
      - host-protoc
    implict_package: true
    pkgs_required:
      - mlibc-headers
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '-Dmlibc_no_headers=true'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true
      - args: ['ln', '-sf', 'crt0.o', '@THIS_COLLECT_DIR@/usr/lib/crt1.o']

  - name: mtdev
    source:
      subdir: 'ports'
      git: 'https://bitmath.org/git/mtdev.git'
      disable_shallow_fetch: true
      tag: 'v1.1.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: nano
    source:
      subdir: 'ports'
      git: 'https://git.savannah.gnu.org/r/nano.git'
      tag: 'v2.9.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: |
              if ! [ -d gnulib ]; then
                  git clone git://git.sv.gnu.org/gnulib.git gnulib
              else
                  git -C gnulib pull --unshallow || true
              fi
        - args: ['./autogen.sh']
    tools_required:
      - host-pkg-config
      - system-gcc
    pkgs_required:
      - ncurses
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - 'CFLAGS=-DSLOW_BUT_NO_HACKS'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: nasm
    default: false
    source:
      subdir: 'ports'
      git: 'https://repo.or.cz/nasm.git'
      tag: 'nasm-2.14.02'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: ncurses
    source:
      subdir: 'ports'
      url: 'https://ftp.gnu.org/pub/gnu/ncurses/ncurses-6.1.tar.gz'
      format: 'tar.gz'
      extract_path: 'ncurses-6.1'
      tools_required:
        - host-automake-v1.11
      regenerate:
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.11/share/automake-1.11/config.sub',
            '@THIS_SOURCE_DIR@/']

    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--without-ada'
    build:
      - args: ['make', '-j@PARALLELISM@', 'all']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']
        quiet: true

  - name: pixman
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/pixman/pixman.git'
      tag: 'pixman-0.34.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libpng
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: protobuf
    from_source: protobuf
    tools_required:
      - system-gcc
      - host-protoc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        # protobuf needs a host protoc when cross-compiling.
        - '--with-protoc=protoc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: python
    default: false
    source:
      subdir: 'ports'
      git: 'https://github.com/python/cpython.git'
      tag: 'v3.5.5'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['autoreconf', '-f', '-i']
    tools_required:
      - host-pkg-config
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--build=x86_64-linux-gnu'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--disable-ipv6'
        environ:
          CONFIG_SITE: '@SOURCE_ROOT@/scripts/python-config-site'
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: wayland
    from_source: wayland
    tools_required:
      - host-autoconf-v2.69
      - host-automake-v1.15
      - host-libtool
      - host-pkg-config
      - system-gcc
      - wayland-scanner
    pkgs_required:
      - libexpat
      - libffi
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-host-scanner'
        - '--disable-dtd-validation'
        - '--disable-documentation'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: wayland-protocols
    source:
      subdir: 'ports'
      git: 'https://github.com/wayland-project/wayland-protocols.git'
      tag: '1.18'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
      - wayland-scanner
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: weston
    source:
      subdir: 'ports'
      git: 'https://github.com/wayland-project/weston.git'
      tag: '4.0.0'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - host-pkg-config
      - system-gcc
      - wayland-scanner
    pkgs_required:
      - cairo
      - libinput
      - libxkbcommon
      - mesa
      - wayland
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-xwayland'
        - '--disable-x11-compositor'
        - '--disable-weston-launch'
        - '--disable-fbdev-compositor'
        - '--disable-simple-dmabuf-drm-client'
        - '--disable-simple-dmabuf-v4l-client'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: xkeyboard-config
    default: false
    source:
      subdir: 'ports'
      git: 'https://gitlab.freedesktop.org/xkeyboard-config/xkeyboard-config.git'
      tag: 'xkeyboard-config-2.23.1'
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
#    tools_required:
#      - system-gcc
    configure: []
#      - args:
#        - '@THIS_SOURCE_DIR@/configure'
#        - '--host=x86_64-managarm'
#        - '--prefix=/usr'
    build: []
#      - args: ['make', '-j@PARALLELISM@']
#      - args: ['make', 'install']
#        environ:
#          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: zlib
    source:
      subdir: 'ports'
      git: 'https://github.com/madler/zlib.git'
      tag: 'v1.2.11'
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        environ:
          CHOST: 'x86_64-managarm'
          prefix: '/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: libtsm
    source:
      subdir: 'ports'
      git: 'https://github.com/managarm/libtsm-mirror.git'
      tag: 'libtsm-3'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': 'yes'
    tools_required:
      - system-gcc
    pkgs_required:
      - libxkbcommon
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: kmscon
    source:
      subdir: 'ports'
      git: 'https://github.com/dvdhrm/kmscon.git'
      tag: 'kmscon-8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
          environ:
            'NOCONFIGURE': '1'
    tools_required:
      - system-gcc
      - host-pkg-config
      - host-autoconf-v2.69
      - host-automake-v1.15
    pkgs_required:
      - libxkbcommon
      - libdrm
      - libtsm
      - eudev
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--with-video=drm2d'
        - '--with-renderers='
        - '--with-fonts=unifont'
        - '--disable-multi-seat'
        - '--with-sessions=dummy,terminal'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/etc/kmscon']
      - args: ['cp', '@SOURCE_ROOT@/extrafiles/kmscon.conf', '@THIS_COLLECT_DIR@/etc/kmscon/']

  - name: vim
    source:
      subdir: 'ports'
      git: 'https://github.com/vim/vim.git'
      tag: 'v8.1.1802'
    tools_required:
      - system-gcc
      - host-pkg-config
      - host-automake-v1.15
    pkgs_required:
      - ncurses
    configure:
      # vim does not seem to support out-of-tree builds, so we just copy
      # the source tree into the build directory instead
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
      - args:
        - './configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-gtktest'
        - '--disable-icon-cache-update'
        - '--disable-desktop-database-update'
        - '--disable-canberra'
        - '--disable-selinux'
        - '--disable-xsmp'
        - '--disable-channel'
        - '--disable-netbeans'
        - '--enable-multibyte'
        - '--disable-acl'
        - '--disable-gpm'
        - '--disable-sysmouse'
        - '--disable-nls'
        - '--with-tlib=ncurses'
        environ:
          vim_cv_toupper_broken: 'no'
          vim_cv_terminfo: 'yes'
          vim_cv_tgetent: 'zero'
          vim_cv_tty_group: ''
          vim_cv_tty_mode: '0620'
          vim_cv_getcwd_broken: 'no'
          vim_cv_stat_ignores_slash: 'no'
          vim_cv_memmove_handles_overlap: 'yes'
        workdir: '@THIS_BUILD_DIR@/src/'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: sdl2
    source:
      subdir: 'ports'
      hg: 'https://hg.libsdl.org/SDL'
      tag: 'release-2.0.10'
    tools_required:
      - system-gcc
      - host-cmake
      - host-pkg-config
      - wayland-scanner
    pkgs_required:
      - libdrm
      - eudev
      - mesa
      - wayland
      - wayland-protocols
    configure:
      - args:
        - 'cmake'
        - '-GNinja'
        - '-DCMAKE_TOOLCHAIN_FILE=@SOURCE_ROOT@/scripts/CMakeToolchain.txt'
        - '-DCMAKE_INSTALL_PREFIX=/usr'
        - '-DALTIVEC=OFF'
        - '-DDISKAUDIO=OFF'
        - '-DVIDEO_DIRECTFB=ON'
        - '-DVIDEO_OPENGL=ON'
        - '-DVIDEO_OPENGLES=ON'
        - '-DPTHREADS=OFF'
        - '-DPTHREADS_SEM=OFF'
        - '-DOSS=OFF'
        - '-DALSA=OFF'
        - '-DJACK=OFF'
        - '-DESD=OFF'
        - '-DPULSEAUDIO=OFF'
        - '-DARTS=OFF'
        - '-DNAS=OFF'
        - '-DSNDIO=OFF'
        - '-DFUSIONSOUND=OFF'
        - '-DLIBSAMPLERATE=OFF'
        - '-DRPATH=OFF'
        - '-DCLOCK_GETTIME=OFF'
        - '-DINPUT_TSLIB=OFF'
        - '-DVIDEO_X11=OFF'
        - '-DVIDEO_WAYLAND=ON'
        - '-DVIDEO_WAYLAND_QT_TOUCH=OFF'
        - '-DVIDEO_RPI=OFF'
        - '-DVIDEO_COCOA=OFF'
        - '-DDIRECTX=OFF'
        - '-DWASAPI=OFF'
        - '-DRENDER_D3D=OFF'
        - '-DVIDEO_VIVANTE=OFF'
        - '-DVIDEO_VULKAN=OFF'
        - '-DVIDEO_KMSDRM=ON'
        - '-DKMSDRM_SHARED=OFF'
        - '-DSDL_DLOPEN=ON'
        - '-DHIDAPI=OFF'
        - '-DSDL_SHARED=ON'
        - '-DSDL_STATIC=OFF'
        - '@THIS_SOURCE_DIR@/'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: tyr-quake
    source:
      subdir: 'ports'
      git: 'git://disenchant.net/tyrquake'
      tag: 'v0.65'
    tools_required:
      - system-gcc
      - host-pkg-config
    pkgs_required:
      - sdl2
    configure:
      - args:
        - 'meson'
        - '--cross-file'
        - '@SOURCE_ROOT@/scripts/meson.cross-file'
        - '--prefix=/usr'
        - '--libdir=lib'
        - '--buildtype=debugoptimized'
        - '@THIS_SOURCE_DIR@'
    build:
      - args: ['ninja']
      - args: ['ninja', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: lua
    source:
      subdir: ports
      url: 'https://www.lua.org/ftp/lua-5.3.5.tar.gz'
      format: 'tar.gz'
      extract_path: 'lua-5.3.5'
    tools_required:
      - system-gcc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
      - args:
        - 'sed'
        - '-i'
        - 's|^#define LUA_ROOT "/usr/local/"$|#define LUA_ROOT "/usr/"|'
        - 'src/luaconf.h'
    build:
      - args:
        - 'make'
        - 'generic'
        - 'CC=x86_64-managarm-gcc'
        - 'AR=x86_64-managarm-ar rcu'
        - 'RANLIB=x86_64-managarm-ranlib'
        - '-j@PARALLELISM@'
      - args: ['make', 'install', 'INSTALL_TOP=@THIS_COLLECT_DIR@/usr']
        quiet: true

  - name: mednafen
    source:
      subdir: 'ports'
      url: 'https://mednafen.github.io/releases/files/mednafen-1.24.0-UNSTABLE.tar.xz'
      format: 'tar.xz'
      extract_path: 'mednafen'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['./autogen.sh']
    tools_required:
      - system-gcc
      - host-pkg-config
      - host-autoconf-v2.69
      - host-automake-v1.15
    pkgs_required:
      - sdl2
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--without-libsndfile'
        - '--disable-debugger'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'
        quiet: true

  - name: runit
    default: false
    source:
      subdir: ports
      url: 'http://smarden.org/runit/runit-2.1.2.tar.gz'
      format: 'tar.gz'
      extract_path: 'admin/runit-2.1.2'
      patch-path-strip: 1
    tools_required:
      - system-gcc
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
      - args: 'echo x86_64-managarm-gcc -O2 -Wall > @THIS_BUILD_DIR@/src/conf-cc'
      - args: 'echo x86_64-managarm-gcc > @THIS_BUILD_DIR@/src/conf-ld'
      - args: 'sed -i s/-static// src/Makefile'
      - args: 'sed -i 1s/utmpset// src/Makefile'
      - args: 'sed -i /utmpset/d package/commands'
    build:
      - args: ['make', '-j@PARALLELISM@', '-C', 'src', 'chkshsgr', 'choose', 'compile', 'hasshsgr.h1', 'hasshsgr.h2', 'load', 'tryshsgr.c', 'warn-shsgr']
      - args: 'cat @THIS_BUILD_DIR@/src/hasshsgr.h1 > @THIS_BUILD_DIR@/src/hasshsgr.h'
      - args: 'cat @THIS_BUILD_DIR@/src/uw_tmp.h1 > @THIS_BUILD_DIR@/src/uw_tmp.h'
      - args: ['make', '-j@PARALLELISM@', '-C', 'src']
      - args: 'install -Dt @THIS_COLLECT_DIR@/bin $(sed s,^,src/, @THIS_BUILD_DIR@/package/commands)'

  - name: tar
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/tar.git'
      tag: 'release_1_32'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
      - args: 'sed -i s/-Werror//g @THIS_BUILD_DIR@/src/Makefile'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: gzip
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/gzip.git'
      tag: 'v1.10'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
      - args: 'sed -i s/-Werror//g @THIS_BUILD_DIR@/lib/Makefile'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: grep
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/grep.git'
      tag: 'v3.4'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-perl-regexp' # Explicitly disable pcre support to suppres a warning in configure
        - '--disable-nls'
      - args: 'sed -i s/-Werror//g @THIS_BUILD_DIR@/lib/Makefile'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: sed
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/sed.git'
      tag: 'v4.8'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: diffutils
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/diffutils.git'
      tag: 'v3.7'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
      - args: 'sed -i s/-Werror//g @THIS_BUILD_DIR@/lib/Makefile'
      - args: 'sed -i s/-Werror//g @THIS_BUILD_DIR@/src/Makefile'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: sl
    source:
      subdir: ports
      git: 'https://github.com/mtoyoda/sl.git'
      branch: 'master'
    tools_required:
      - system-gcc
    pkgs_required:
      - ncurses
    configure:
      - args: ['cp', '-r', '@THIS_SOURCE_DIR@/.', '@THIS_BUILD_DIR@']
    build:
      - args: ['make', 'CC=x86_64-managarm-gcc', '-j@PARALLELISM@']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['mkdir', '-p', '@THIS_COLLECT_DIR@/usr/share/man/man1']
      - args: ['cp', '@THIS_BUILD_DIR@/sl', '@THIS_COLLECT_DIR@/usr/bin']
      - args: ['cp', '@THIS_BUILD_DIR@/sl.1', '@THIS_COLLECT_DIR@/usr/share/man/man1']

  - name: libpipeline
    default: false
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/libpipeline.git'
      tag: '1.5.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
        - host-libtool
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: gdbm
    default: false
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/gdbm.git'
      tag: 'v1.18.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./bootstrap']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
        - '--disable-static'
        - '--enable-libgdbm-compat'
        - '--without-readline'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: groff
    default: false
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/groff.git'
      tag: '1.22.4'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
        - host-libtool
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-doc=no'
        environ:
          PAGE: 'A4'
      - args: 'sed -i s/"_GL_MATH_CXX_REAL_FLOATING_DECL_1 (signbit)"//g @THIS_SOURCE_DIR@/lib/math.in.h'
      - args: 'sed -i s/"_GL_MATH_CXX_REAL_FLOATING_DECL_2 (signbit)"//g @THIS_SOURCE_DIR@/lib/math.in.h'
      - args: 'sed -i s/"#   undef signbit"//g @THIS_SOURCE_DIR@/lib/math.in.h'
    build:
      - args: ['make', '-j1']
        environ:
          xpmtoppm: '/usr/bin/true'
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: less
    source:
      subdir: ports
      url: 'http://www.greenwoodsoftware.com/less/less-551.tar.gz'
      format: 'tar.gz'
      extract_path: 'less-551'
    tools_required:
      - system-gcc
    pkgs_required:
      - ncurses
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--sysconfdir=/etc'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']

  - name: man-db
    default: false
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/man-db.git'
      tag: '2.9.1'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-pkg-config
        - host-libtool
      regenerate:
        - args: ['./bootstrap']
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/build-aux/']
    tools_required:
      - system-gcc
    pkgs_required:
      - libpipeline
      - gdbm
      - groff
      - less
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
        - '--docdir=/usr/share/doc/man-db-2.9.0'
        - '--sysconfdir=/etc'
        - '--disable-setuid'
        - '--with-systemdtmpfilesdir='
        - '--with-systemdsystemunitdir='
        - '--disable-manual'
        - '--with-pager=/usr/bin/less'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: file
    source:
      subdir: ports
      git: 'https://github.com/file/file.git'
      tag: 'FILE5_38'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['autoreconf', '-f', '-i']
    tools_required:
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-bzlib'
        - '--disable-xzlib'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: xz-utils
    default: false
    source:
      subdir: ports
      git: 'https://git.tukaani.org/xz.git'
      branch: 'v5.2'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
      regenerate:
        - args: ['./autogen.sh', '--no-po4a']
    tools_required:
      - system-gcc
    pkgs_required:
      - zlib
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-static'
        - '--disable-nls'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: gawk
    default: false
    source:
      subdir: ports
      git: 'https://git.savannah.gnu.org/git/gawk.git'
      tag: 'gawk-4.2.1'
      tools_required:
        - host-automake-v1.15
      regenerate:
        - args: sed -i 's/extras//' @THIS_SOURCE_DIR@/Makefile.in
        - args: ['cp',
            '@BUILD_ROOT@/tools/host-automake-v1.15/share/automake-1.15/config.sub',
            '@THIS_SOURCE_DIR@/']
    tools_required:
      - system-gcc
      - host-automake-v1.15
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--disable-nls'
        - '--disable-extensions'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'install']
        environ:
          DESTDIR: '@THIS_COLLECT_DIR@'

  - name: pcre
    source:
      subdir: ports
      url: 'https://ftp.pcre.org/pub/pcre/pcre-8.44.tar.gz'
      format: 'tar.gz'
      extract_path: 'pcre-8.44'
      tools_required:
        - host-autoconf-v2.69
        - host-automake-v1.15
        - host-libtool
        - host-pkg-config
      regenerate:
        - args: ['autoreconf']
    tools_required:
      - system-gcc
    configure:
      - args:
        - '@THIS_SOURCE_DIR@/configure'
        - '--host=x86_64-managarm'
        - '--prefix=/usr'
        - '--with-sysroot=@SYSROOT_DIR@' # Set libtool's lt_sysroot.
        - '--enable-utf'
        - '--enable-unicode-properties'
        - '--enable-pcre8'
        - '--enable-pcre16'
        - '--enable-pcre32'
        - 'CFLAGS=-fPIC'
        environ:
          PKG_CONFIG_SYSROOT_DIR: '@BUILD_ROOT@/system-root'
          PKG_CONFIG_LIBDIR: '@BUILD_ROOT@/system-root/usr/lib/pkgconfig:@BUILD_ROOT@/system-root/usr/share/pkgconfig'
    build:
      - args: ['make', '-j@PARALLELISM@']
      - args: ['make', 'DESTDIR=@THIS_COLLECT_DIR@', 'install']

tasks:
  - name: make-image
    pkgs_required:
      - managarm-kernel
      - managarm-system
    args:
      - '@SOURCE_ROOT@/scripts/mkimage'
    workdir: '@BUILD_ROOT@'

  - name: qemu
    tasks_required:
      - task: make-image
        order_only: true
    args:
      - '@SOURCE_ROOT@/scripts/run-qemu'
    workdir: '@BUILD_ROOT@'
